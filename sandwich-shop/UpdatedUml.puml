@startuml
class com.pluralsight.dataManager.DataManager {
+ {static} void createReceipt(Order)
}

class com.pluralsight.userinterface.method.chips.ChipView {
~ Scanner s
+ void addChip(Order)
}


enum com.pluralsight.chips.ChipsType {
+  LAYS
+  DORITOS
+  BBQ
+  SALT_N_VINEGAR
}

class com.pluralsight.toppings.Cheese {
- CheeseType cheeseType
+ double getPrice()
+ String getStringForReceipt()
+ CheeseType getCheeseType()
}


enum com.pluralsight.toppings.RegularToppingType {
+  LETTUCE
+  PEPPERS
+  ONIONS
+  TOMATOES
+  JALEPENOS
+  CUCUMBERS
+  PICKLES
+  GUACAMOLE
+  MUSHROOMS
+  MAYO
+  MUSTARD
}

enum com.pluralsight.toppings.MeatType {
+  STEAK
+  HAM
+  SALAMI
+  ROAST_BEEF
+  CHICKEN
+  BACON
}

enum com.pluralsight.drinks.DrinkSize {
+  SMALL
+  MEDIUM
+  LARGE
}

class com.pluralsight.userinterface.UserInterFace {
~ Scanner s
~ Order order
~ SandwichView sandwichView
~ DrinkView drinkView
~ ChipView chipView
+ void homeScreen()
+ void orderScreen()
}


abstract class com.pluralsight.toppings.Topping {
# boolean hasExtra
# SandwichSize size
+ boolean isHasExtra()
+ void setHasExtra(boolean)
+ {abstract}double getPrice()
}


class com.pluralsight.userinterface.method.addDrink.DrinkView {
- Scanner s
+ void addDrink(Order)
- double getDrinkPrice(DrinkSize)
+ DrinkSize getDrinkSizeFromUser()
+ DrinkType drinkType()
}


enum com.pluralsight.sandwich.BreadType {
+  WHITE
+  WHEAT
+  RYE
+  WRAP
}

abstract class com.pluralsight.toppings.PremiumTopping {
# double price
+ double getPrice()
}


class com.pluralsight.userinterface.method.addSandwich.SandwichView {
- List<Topping> toppings
~ ArrayList<MeatType> meatTypes
~ ArrayList<CheeseType> cheeseTypes
~ ArrayList<RegularToppingType> regularToppingTypes
~ Scanner s
+ void addSandwich(Order)
- SandwichSize chooseSandwichSize()
- BreadType chooseBreadType()
+ {static} double getMeatPriceBySize(SandwichSize)
- void chooseOneOrMoreMeatTypes(SandwichSize)
- boolean askUserIfTheyWantExtra(SandwichSize)
+ {static} double getExtraMeatPrice(SandwichSize)
- void chooseOneOrMoreCheeseTypes(SandwichSize)
- {static} double getCheesePriceBySandwichSize(SandwichSize)
- void chooseToppings()
+ boolean isToasted()
}


class com.pluralsight.sandwich.Program {
+ {static} void main(String[])
}

interface com.pluralsight.sandwich.Product {
~ double getPrice()
~ String getStringForReceipt()
}

class com.pluralsight.toppings.Meat {
- MeatType meatType
+ double getPrice()
+ String getStringForReceipt()
+ MeatType getMeatType()
}


class com.pluralsight.orders.Order {
- ArrayList<Product> items
+ void addItem(Product)
+ double getPrice()
+ String getStringForReceipt()
+ String toString()
}


enum com.pluralsight.drinks.DrinkType {
+  FRUIT_PUNCH
+  SPRITE
+  PEPSI
+  COKE
+  LEMONADE
+  Fruit_punch
}

enum com.pluralsight.sandwich.SandwichSize {
+  SMALL
+  MEDIUM
+  LARGE
}

class com.pluralsight.chips.Chips {
- ChipsType type
+ double getPrice()
+ String getStringForReceipt()
+ String toString()
}


enum com.pluralsight.toppings.CheeseType {
+  AMERICAN
+  PROVOLONE
+  CHEDDAR
+  SWISS
}

class com.pluralsight.sandwich.Sandwich {
- SandwichSize size
- BreadType bread
- List<Topping> toppings
- List<MeatType> meatTypes
- List<CheeseType> cheeseTypes
- List<RegularToppingType> regToppings
- boolean isToasted
+ void addTopping(Topping)
+ double getPrice()
- double getBreadPrice()
+ String toString()
+ String getStringForReceipt()
}


class com.pluralsight.drinks.Drink {
- DrinkSize drinkSize
- DrinkType drinkType
+ String getStringForReceipt()
+ double getPrice()
+ String toString()
}




com.pluralsight.toppings.PremiumTopping <|-- com.pluralsight.toppings.Cheese
com.pluralsight.sandwich.Product <|.. com.pluralsight.toppings.Topping
com.pluralsight.toppings.Topping <|-- com.pluralsight.toppings.PremiumTopping
com.pluralsight.toppings.PremiumTopping <|-- com.pluralsight.toppings.Meat
com.pluralsight.sandwich.Product <|.. com.pluralsight.chips.Chips
com.pluralsight.sandwich.Product <|.. com.pluralsight.sandwich.Sandwich
com.pluralsight.sandwich.Product <|.. com.pluralsight.drinks.Drink
@enduml